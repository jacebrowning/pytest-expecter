[tool.poetry]

name = "pytest-expecter"
version = "3.0"
description = "Better testing with expecter and pytest."

license = "BSD"

authors = ["Jace Browning <jacebrowning@gmail.com>"]

readme = "README.md"

homepage = "https://pypi.org/project/pytest-expecter"
documentation = "https://pytest-expecter.readthedocs.io"
repository = "https://github.com/jacebrowning/pytest-expecter"

keywords = ["pytest", "testing"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Plugins",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Testing",
]

packages = [
    { include = "expecter" },
]

[tool.poetry.dependencies]

python = "^3.9"

[tool.poetry.group.dev.dependencies]

# Formatters
black = "^22.1"
isort = "^5.10"

# Linters
mypy = "*"
pydocstyle = "*"
pylint = "~2.15"
types-setuptools = "*"

# Testing
pytest = "^6.2.5"
pytest-cov = "*"
pytest-describe = "^1.0"
pytest-random = "*"
freezegun = "*"

# Reports
coveragespace = "*"

# Documentation
mkdocs = "^1.2.3"
pygments = "*"
jinja2 = "~3.0.3"

# Tooling
pyinstaller = "*"
sniffer = "*"
MacFSEvents = { version = "*", platform = "darwin" }
pync = { version = "*", platform = "darwin" }

[tool.poetry.requires-plugins]

poetry-plugin-export = ">=1.8"

[tool.poetry.plugins.pytest11]

"pytest-expecter" = "expecter.plugin"

[tool.black]

quiet = true

[tool.isort]

profile = "black"

[tool.mypy]

ignore_missing_imports = true
no_implicit_optional = true
check_untyped_defs = true

cache_dir = ".cache/mypy/"

[tool.pytest.ini_options]

addopts = """
--strict-markers

-r sxX
--show-capture=log

--cov-report=html
--cov-report=term-missing:skip-covered
--no-cov-on-fail
"""

cache_dir = ".cache/pytest/"

markers = []

[build-system]

requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
